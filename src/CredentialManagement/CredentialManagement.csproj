<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net6.0-windows;net45;net461;net472</TargetFrameworks>
    <Version>1.0.4</Version>
    <PackageId>SBRW.CredentialManagement</PackageId>
    <Authors>iLya Lozovyy, Jason Allen, DavidCarbon</Authors>
	<Company>Soapbox Race World</Company>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>Credential Management package is a wrapper for the Windows Credential Management API that supports both the old and the new style of UI</Description>
    <RepositoryUrl>https://github.com/DavidCarbon-SBRW/SBRW.CredentialManagement</RepositoryUrl>
	<PackageProjectUrl>https://github.com/DavidCarbon-SBRW/SBRW.CredentialManagement</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/DavidCarbon-SBRW/SBRW.CredentialManagement/blob/master/LICENSE</PackageLicenseUrl>
	<RepositoryType>git</RepositoryType>
	<GenerateDocumentationFile>true</GenerateDocumentationFile>
	<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
	<IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
	<!-- Required: Full Debugging -->
	<DebugType>full</DebugType>
	<DebugSymbols>true</DebugSymbols>
	<!-- Required: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
	<PublishRepositoryUrl>true</PublishRepositoryUrl>
	<!-- Required: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
	<IncludeSymbols>true</IncludeSymbols>
	<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	<!-- Required: Include symbols files if Self-Hosted Nuget Feed does not support symbol packages -->
	<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' or '$(TargetFramework)' == 'net6.0-windows'">
    <PackageReference Include="System.Drawing.Common" Version="6.0.0" />
    <PackageReference Include="System.Security.Permissions" Version="6.0.0" />
  </ItemGroup>
	
	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="if &quot;$(Configuration)&quot; == &quot;Release&quot; (&#xD;&#xA;if exist &quot;$(SolutionDir)Keys\Launcher.p12&quot; (&quot;C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe&quot; sign /f &quot;$(SolutionDir)Keys\Launcher.p12&quot; /p &quot;Launcher Development CRT&quot; /d &quot;Soapbox Race World&quot; /du &quot;https://soapboxrace.world&quot; /tr http://timestamp.digicert.com /td SHA256 &quot;$(TargetPath)&quot;)&#xD;&#xA;if exist &quot;$(SolutionDir)Keys\Launcher.p12&quot; (&quot;C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe&quot; sign /f &quot;$(SolutionDir)Keys\Launcher.p12&quot; /p &quot;Launcher Development CRT&quot; /d &quot;Soapbox Race World&quot; /du &quot;https://soapboxrace.world&quot; /tr http://timestamp.digicert.com /td SHA256 &quot;$(TargetDir)SBRW.*.dll&quot;)&#xD;&#xA;)&#xD;&#xA;" />
	</Target>

</Project>
